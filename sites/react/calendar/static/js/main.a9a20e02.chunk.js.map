{"version":3,"sources":["Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["addDays","days","shift","toStart","ans","slice","i","unshift","push","genDays","today","month","year","count","Date","getDate","daysInMonth","getMonth","getFullYear","shiftDay","console","log","getDay","length","String","prototype","capitalize","this","charAt","toUpperCase","Calendar","state","isLoading","current","month_num","changeMonth","dir","toLocaleString","setState","changeYear","className","onClick","map","v","isCurrent","day","Component","CalendarDay","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9a20e02.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Calendar.scss';\n\nString.prototype.capitalize = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nfunction daysInMonth(month, year) {\n    let count = (new Date(year, month + 1, 0).getDate());\n    let days = [];\n    for (let i = 0; i < count; i++) days.push(i + 1);\n    return days;\n}\n\nfunction addDays(days, shift, toStart = true) {\n    if (shift == -1) shift = 6;\n    let ans = days.slice();\n    for (let i = 0; i < shift; i++)\n        if (toStart) ans.unshift(0);\n        else ans.push(0);\n    return ans;\n}\n\nfunction genDays(today) {\n    let days = daysInMonth(today.getMonth(), today.getFullYear());\n    let shiftDay = new Date(today.getFullYear(), today.getMonth(), 1);\n    console.log(shiftDay);\n    days = addDays(days, shiftDay.getDay() - 1);\n    if (days.length < 35) days = addDays(days, 35 - days.length, false);\n    return days;\n}\n\nexport default class Calendar extends Component {\n    state = { isLoading: true, year: null, days: null, current: null, month: null, month_num: null };\n    componentDidMount() {\n        let today = new Date();\n        this.setState({\n            days: genDays(today),\n            year: today.getFullYear(),\n            current: today.getDate(),\n            month: today.toLocaleString('default', { month: 'long' }).capitalize(),\n            month_num: today.getMonth(),\n            isLoading: false\n        });\n    }\n    changeMonth = (dir) => {\n        let year = this.state.year;\n        let month_num = this.state.month_num;\n        if (month_num + dir < 0) {\n            year = year - 1;\n            month_num = 11;\n        } else if (month_num + dir > 11) {\n            year = year + 1;\n            month_num = 0;\n        } else {\n            month_num = month_num + dir;\n        }\n        let today = new Date(year, month_num);\n        let days = genDays(today);\n        let month = today.toLocaleString('default', { month: 'long' }).capitalize();\n        this.setState({ days: days, month: month, month_num: month_num, year: year });\n        return;\n    }\n    changeYear = (dir) => {\n        let year = this.state.year;\n        year += dir;\n        let month = this.state.month_num;\n        let today = new Date(year, month);\n        let days = genDays(today);\n        this.setState({ days: days, year: year });\n        return;\n    }\n    render() {\n        return (\n            <div>\n                {this.state.isLoading && <div className=\"calendar__load\" />}\n                {this.state.isLoading ? <div className=\"calendar__load\" /> : (\n                    <div className=\"calendar\">\n                        <div className=\"calendar__arrow\">\n                            <button className=\"calendar__arrow_left\" onClick={() => this.changeYear(-1)}>{'<'}</button>\n                        </div>\n                        <div className=\"calendar__year\">{this.state.year}</div>\n                        <div className=\"calendar__arrow\">\n                            <button className=\"calendar__arrow_right\" onClick={() => this.changeYear(+1)}>{'>'}</button>\n                        </div>\n                        <div className=\"calendar__arrow\">\n                            <button className=\"calendar__arrow_left\" onClick={() => this.changeMonth(-1)}>{'<'}</button>\n                        </div>\n                        <div className=\"calendar__month\">{this.state.month}</div>\n                        <div className=\"calendar__arrow\">\n                            <button className=\"calendar__arrow_right\" onClick={() => this.changeMonth(+1)}>{'>'}</button>\n                        </div>\n                        <div className=\"calendar__days\">\n                            {this.state.days.map((v, i) => {\n                                return <CalendarDay isCurrent={v == this.state.current} day={v} key={i} />\n                            })\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nclass CalendarDay extends Component {\n    render() {\n        return (\n            <div className={`calendar__day${this.props.isCurrent ? ' calendar__day_current' : ''}${this.props.day <= 0 ? ' calendar__day_prev' : ''}`}>\n                {this.props.day > 0 ? this.props.day : '-'}\n            </div>\n        );\n    }\n}","import './App.scss';\nimport React from 'react';\nimport Calendar from './Calendar';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Calendar />      \n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}