{"version":3,"sources":["user.svg","simple.svg","Header.js","About.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","simple","Component","About","user","Contact","htmlFor","type","id","name","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,2QCKtBC,E,uKAEb,OACI,6BACI,gCACI,yBAAKC,UAAU,QAAf,kBAAqC,uCACrC,4BACI,4BAAI,uBAAGC,KAAK,UAAUD,UAAU,QAA5B,+CACJ,4BAAI,uBAAGC,KAAK,SAASD,UAAU,QAA3B,0CACJ,4BAAI,uBAAGC,KAAK,WAAWD,UAAU,QAA7B,uDAGZ,yBAAKA,UAAU,WACX,yDACA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKC,KAAMC,IAAS,aAExB,0BAAMF,UAAU,eAAhB,oDACA,0BAAMA,UAAU,cAAhB,mJAEJ,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKC,KAAMC,IAAS,aAExB,0BAAMF,UAAU,eAAhB,8CACA,0BAAMA,UAAU,cAAhB,mMAEJ,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKC,KAAMC,IAAS,aAExB,0BAAMF,UAAU,eAAhB,oDACA,0BAAMA,UAAU,cAAhB,mL,GAlCQG,a,wBCAfC,E,uKAEb,OACI,yBAAKJ,UAAU,SACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cAAa,yBAAKC,KAAMI,IAAO,aAC9C,uBAAGL,UAAU,gBAAb,UACA,uBAAGA,UAAU,eAAb,oKACA,4BAAQA,UAAU,cAAlB,eAEJ,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,cAAa,yBAAKC,KAAMI,IAAO,aAC1C,uBAAGL,UAAU,gBAAb,UACA,uBAAGA,UAAU,eAAb,qKACA,4BAAQA,UAAU,cAAlB,oB,GAdeG,aCAdG,G,6KAEb,OACI,yBAAKN,UAAU,WACX,+FACA,0BAAMA,UAAU,QACZ,yBAAKA,UAAU,eACX,2BAAOO,QAAQ,OAAOP,UAAU,eAAc,oDAC9C,2BAAOQ,KAAK,OAAOR,UAAU,cAAcS,GAAG,OAAOC,KAAK,OAAOC,YAAY,wBAE7E,2BAAOJ,QAAQ,QAAQP,UAAU,eAAc,uCAC/C,2BAAOQ,KAAK,OAAOR,UAAU,cAAcS,GAAG,QAAQC,KAAK,QAAQC,YAAY,YAGnF,yBAAKX,UAAU,eACX,2BAAOO,QAAQ,OAAOP,UAAU,oCAAmC,gEACnE,8BAAUU,KAAK,OAAOD,GAAG,OAAOT,UAAU,iBAAiBW,YAAY,2C,GAhB1DR,cCoBtBS,MAnBf,WACE,OACE,yBAAKZ,UAAU,QACb,6BAASS,GAAG,UACV,kBAAC,EAAD,OAEF,6BAASA,GAAG,SACV,kBAAC,EAAD,OAEF,6BAASA,GAAG,WACV,kBAAC,EAAD,OAEF,yBAAKT,UAAU,QAAf,cACa,uBAAGC,KAAK,wBAAR,sBCPCY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.aa21b08f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.bc9581a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/simple.964e4d84.svg\";","import { Component } from \"react\";\nimport React from 'react';\nimport \"./Header.css\";\nimport simple from \"./simple.svg\";\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div>\n                <header>\n                    <div className=\"logo\">Simple site by <span>hlkl</span></div>\n                    <ul>\n                        <li><a href=\"#header\" className=\"link\">Главная</a></li>\n                        <li><a href=\"#about\" className=\"link\">Обо мне</a></li>\n                        <li><a href=\"#contact\" className=\"link\">Контакты</a></li>\n                    </ul>\n                </header>\n                <div className=\"content\">\n                    <h1>Welcome to my Simple Site</h1>\n                    <div className=\"content__info\">\n                        <div className=\"info__block\">\n                            <svg className=\"info__img\">\n                                <use href={simple + \"#Capa_1\"}></use>\n                            </svg>\n                            <span className=\"info__title\">Простота</span>\n                            <span className=\"info__text\">Простота в гармонии с кодом</span>\n                        </div>\n                        <div className=\"info__block\">\n                            <svg className=\"info__img\">\n                                <use href={simple + \"#Capa_1\"}></use>\n                            </svg>\n                            <span className=\"info__title\">Комфорт</span>\n                            <span className=\"info__text\">Комфортно читать и использовать код</span>\n                        </div>\n                        <div className=\"info__block\">\n                            <svg className=\"info__img\">\n                                <use href={simple + \"#Capa_1\"}></use>\n                            </svg>\n                            <span className=\"info__title\">Качество</span>\n                            <span className=\"info__text\">Качество на высшем(почти) уровне</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import { Component } from \"react\";\nimport React from 'react';\nimport \"./About.css\";\nimport user from \"./user.svg\";\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <div className=\"about__block\">\n                    <svg className=\"about__img\"><use href={user + \"#Capa_1\"}></use></svg>\n                    <p className=\"about__title\"> Text </p>\n                    <p className=\"about__text\">Weight has nothing to do with it. Are you okay? Yeah, I'll keep that in mind. My name's Lorraine, Lorraine Baines. Doc, look, all we need is a little plutonium.</p>\n                    <button className=\"about__btn\">Learn more</button>\n                </div>\n                <div className=\"about__block\">\n                <svg className=\"about__img\"><use href={user + \"#Capa_1\"}></use></svg>\n                    <p className=\"about__title\"> Text </p>\n                    <p className=\"about__text\"> Weight has nothing to do with it. Are you okay? Yeah, I'll keep that in mind. My name's Lorraine, Lorraine Baines. Doc, look, all we need is a little plutonium.</p>\n                    <button className=\"about__btn\">Learn more</button>\n                </div>\n            </div>\n        );\n    }\n}","import { Component } from \"react\";\nimport React from 'react';\nimport \"./Contact.css\";\nimport user from \"./user.svg\";\n\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className=\"contact\">\n                <h2> Ваше мнение:</h2>\n                <form className=\"form\">\n                    <div className=\"form__block\">\n                        <label htmlFor=\"name\" className=\"form__label\"><span>Имя</span>\n                        <input type=\"text\" className=\"form__input\" id=\"name\" name=\"name\" placeholder=\"Имя\" />\n                        </label>\n                        <label htmlFor=\"email\" className=\"form__label\"><span>Email</span>\n                        <input type=\"text\" className=\"form__input\" id=\"email\" name=\"email\" placeholder=\"Email\" />\n                        </label>\n                    </div>\n                    <div className=\"form__block\">\n                        <label htmlFor=\"text\" className=\"form__label form__label-textarea\"><span>Текст</span>\n                        <textarea name=\"text\" id=\"text\" className=\"form__textarea\" placeholder=\"Текст\"></textarea>\n                        </label>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport About from './About';\nimport Contact from './Contact';\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <section id=\"header\">\n        <Header />\n      </section>\n      <section id=\"about\">\n        <About />\n      </section>\n      <section id=\"contact\">\n        <Contact />\n      </section>\n      <div className=\"cred\">\n        Icons from <a href=\"https://flaticon.com\">  flaticon.com </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}